description: >
  Fetch and load in your parameter store values as environment variables.

parameters:
  filter:
    type: string
    description: >
      One or more filters. Use a filter to return a more specific list of results. Ex: "Key=string,Option=string,Values=string,..."
    default: ""
  max_items:
    type: integer
    description: >
      Number of items to fetch from the parameter store
    default: 10000

steps:
  - aws-cli/setup
  - run:
      name: Load AWS Parameters into environment
      command: |
        mkdir -p /tmp/parameterstore/
        for page in $(aws ssm describe-parameters --max-items << parameters.max_items >> --parameter-filters << parameters.filter >> | jq -c '.Parameters | _nwise(10)'); do
          _jq() {
            PARAMS=$(echo "${page}" | jq -rc '.[].Name' | awk 'NR > 1 { printf(" ") } {printf "%s",$0}')

            for row in $(aws ssm get-parameters --with-decryption --names ${PARAMS} | jq -r '.Parameters[] | @base64'); do
              PARNAME=$(echo ${row} | base64 --decode | jq -r '.Name')
              PARDATA=$(echo ${row} | base64 --decode | jq -r '.Value')

              if [ -z "$PARDATA" ]
              then
                echo "${PARNAME} appears to be empty. Please double check the value of this parameter."
                exit 1
              fi
              if [ -f /tmp/parameterstore/"${PARNAME}" ]
              then
                echo "This value has already been stored. Is this value stored twice?"
                exit 1
              fi

              echo "${PARDATA}" >> /tmp/parameterstore/"${PARNAME}"
              echo "export '${PARNAME}=$(cat /tmp/parameterstore/"${PARNAME}")'" >> /tmp/parameterstore/PARAMETERSTORESOURCEFILE
              echo "${PARNAME} exported"
            done
          }
          _jq
        done

        source /tmp/parameterstore/PARAMETERSTORESOURCEFILE
        cat /tmp/parameterstore/PARAMETERSTORESOURCEFILE >> "$BASH_ENV"
